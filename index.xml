<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Savitha's Blog</title><link>https://www.gsavitha.in/</link><description>Recent content on Savitha's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>mailto@gsavitha.in (Savitha)</managingEditor><webMaster>mailto@gsavitha.in (Savitha)</webMaster><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Thu, 11 Feb 2021 15:11:08 +0530</lastBuildDate><sy:updatePeriod>monthly</sy:updatePeriod><atom:link href="https://www.gsavitha.in/index.xml" rel="self" type="application/rss+xml"/><item><title>super() vs super(props)</title><link>https://www.gsavitha.in/posts/super-vs-super-props/</link><pubDate>Fri, 29 Jan 2021 17:52:28 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Fri, 29 Jan 2021 17:52:28 +0530</atom:modified><guid>https://www.gsavitha.in/posts/super-vs-super-props/</guid><description>TL;DR üöÄ If you want to use this.props inside constructor of derived class, use super(props).
While checking react code, you might have come across a line super(props), sometimes super(). Ever wondered what&amp;rsquo;s the difference between two?
Why do we need to pass props ? Do we always need to pass props ?
Consider the example below.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import React, { Component } from &amp;#39;react&amp;#39;; class Game extends Component { constructor(props) { super(props); this.</description><dc:creator>Savitha</dc:creator><category>react</category><category>react</category></item><item><title>Hosting react projects on GH Pages</title><link>https://www.gsavitha.in/posts/host-react-on-gh-pages/</link><pubDate>Fri, 11 Sep 2020 12:31:59 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Fri, 11 Sep 2020 12:31:59 +0530</atom:modified><guid>https://www.gsavitha.in/posts/host-react-on-gh-pages/</guid><description>Want to host a react website? You cant afford paying bills for each and every project?
Well, Don&amp;rsquo;t worry now you can do that for free with the help of Github Pages. Using GH Pages you can host any website for free in a secured way.
When you host any static website or blog on github servers, basically your domain name would be in this format: {username}.github.io/{repo-name}, if you wish to host it on your own domain, no problem you can do that as well.</description><dc:creator>Savitha</dc:creator><category>ghpages</category><category>react</category><category>hosting</category><category>devops</category><category>ci-cd</category></item><item><title>Syncing Git Fork with Original Repository</title><link>https://www.gsavitha.in/posts/sync-fork-with-original-git/</link><pubDate>Fri, 11 Sep 2020 11:30:29 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Fri, 11 Sep 2020 11:30:29 +0530</atom:modified><guid>https://www.gsavitha.in/posts/sync-fork-with-original-git/</guid><description>TL;DR üöÄ These are the only commands you need to sync your forked repo with the original repo
1 2 3 4 5 git remote add upstream https://github.com/&amp;lt;Original Owner Username&amp;gt;/&amp;lt;Original Repository&amp;gt;.git git fetch upstream git checkout master git merge upstream/master git push Why should I do this? üòè Before submitting any pull request, syncing your forked repository with original repository is an important step to perform, as you may want to get the bug fixes or additional features to merge with your code since the time you forked the original repo.</description><dc:creator>Savitha</dc:creator><category>git</category><category>tools</category><category>ci-cd</category><category>ci-cd</category><category>devops</category></item><item><title>React State Patterns</title><link>https://www.gsavitha.in/posts/react-state-patterns/</link><pubDate>Tue, 01 Sep 2020 16:27:52 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Tue, 01 Sep 2020 16:27:52 +0530</atom:modified><guid>https://www.gsavitha.in/posts/react-state-patterns/</guid><description>Setting State Using State We know that setState() is asynchronous‚Ä¶
So: it‚Äôs risky to assume previous call has finished when you call it. Also, React will sometimes batch (squash together) calls to setState together into one for performance reasons. If a call to setState() depends on current state, the safest thing is to use the alternate ‚Äúcallback form‚Äù.
setState Callback Form this.setState(callback)
Instead of passing an object, pass it a callback with the current state as a parameter.</description><dc:creator>Savitha</dc:creator><category>react</category><category>react</category></item><item><title>Build your own website in 10 min! with hugo</title><link>https://www.gsavitha.in/posts/build-your-own-site/</link><pubDate>Sun, 23 Aug 2020 14:58:40 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Sun, 23 Aug 2020 14:58:40 +0530</atom:modified><guid>https://www.gsavitha.in/posts/build-your-own-site/</guid><description>Yes you read it right, you can build and host your website in 10 min üòé.
But how?
Static site generators to the rescue Ok but first, what is a static site? üòï Basically websites are of two types, static and dynamic. A static site as the name sounds it is - static, constant and fixed. It doesn&amp;rsquo;t change dynamically when a developer makes a change to a file . They just create the static content(HTML and CSS) and upload them on to the server where it remains unchanged.</description><dc:creator>Savitha</dc:creator><category>hugo</category><category>website</category><category>portfolio</category><category>misc</category></item></channel></rss>