<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Savitha's Blog</title><link>https://www.gsavitha.in/</link><description>Recent content on Savitha's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>mailto@gsavitha.in (Savitha)</managingEditor><webMaster>mailto@gsavitha.in (Savitha)</webMaster><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Fri, 07 May 2021 06:10:24 +0530</lastBuildDate><sy:updatePeriod>monthly</sy:updatePeriod><atom:link href="https://www.gsavitha.in/index.xml" rel="self" type="application/rss+xml"/><item><title>Remove All Your Facebook Likes</title><link>https://www.gsavitha.in/posts/remove-all-facebook-likes/</link><pubDate>Thu, 08 Apr 2021 21:50:19 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Thu, 08 Apr 2021 21:50:19 +0530</atom:modified><guid>https://www.gsavitha.in/posts/remove-all-facebook-likes/</guid><description>Recently came across an interesting code snippet from github gists.
1 2 3 4 5 6 7 8 setInterval(() =&amp;gt; { for (const Button of document.querySelectorAll( &amp;#39;div[aria-label=&amp;#34;Action options&amp;#34;]&amp;#39; )) { Button.click(); document.querySelector(&amp;#39;div[role=&amp;#34;menuitem&amp;#34;]&amp;#39;).click(); } }, 1000); Visit the below url and dont forget to replace with your FB username or userid.
https://www.facebook.com/{your_id_or_username}/allactivity/?category_key=LIKEDPOSTS&amp;amp;filter_hidden=ALL&amp;amp;filter_privacy=NONE
You can choose filter to choose year or month.
Once you are done with this, open console on your webpage (cmd+shift+J on mac or ctrl+shift+I on windows or linux) or just right click on the webpage choose Inspect Element then select Console and just paste the above snippet and hit Enter.</description><dc:creator>Savitha</dc:creator><media:content url="https://www.gsavitha.inhttps://micdn-13a1c.kxcdn.com/images/sg/content-images/broken-like-facebook.jpg" medium="image"><media:title type="html">featured image</media:title></media:content><category>gist</category><category>javascript</category><category>security</category><category>scripts</category><category>scripts</category><category>privacy</category></item><item><title>What is Micro Frontends?</title><link>https://www.gsavitha.in/posts/micro-frontends/</link><pubDate>Fri, 26 Mar 2021 14:45:17 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Fri, 26 Mar 2021 14:45:17 +0530</atom:modified><guid>https://www.gsavitha.in/posts/micro-frontends/</guid><description>Most of the web apps these days are having 90% of front end and only 10% of the backend. As the application grows bigger and bigger having a monolithic approach on front end doesn&amp;rsquo;t work. There needs to be a way to break this approach into smaller modules that can work independently.
Micro Frontends - A micro service approach to front end development.
What does it mean? Micro Frontends are loosely coupled components of UI that are developed by applying micro services principles on frontend.</description><dc:creator>Savitha</dc:creator><media:content url="https://www.gsavitha.inhttps://blog.scottlogic.com/ceberhardt/assets/microfrontends/microfrontends.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>web-architecture</category><category>web-architecture</category></item><item><title>How to write base cases</title><link>https://www.gsavitha.in/posts/recursion-base-cases/</link><pubDate>Sat, 20 Feb 2021 15:46:57 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Sat, 20 Feb 2021 15:46:57 +0530</atom:modified><guid>https://www.gsavitha.in/posts/recursion-base-cases/</guid><description>This post requires knowledge of Recursion. If you are new here, its recommended to have a look at that post first.
Many times, when it comes to recursion, we can guess the recursive solution but it becomes difficult to understand how to write proper base cases so that everything is handled and we do not get stack overflow(incase of java) or segmentation fault(incase of cpp) errors.
What are base cases? Base cases are those inputs, for which we cannot further break down the problem into smaller sub problems.</description><dc:creator>Savitha</dc:creator><category>dsa</category><category>recursion</category><category>dsa</category></item><item><title>Recursion Simplified</title><link>https://www.gsavitha.in/posts/recursion-simplified/</link><pubDate>Sun, 31 Jan 2021 11:16:15 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Sun, 31 Jan 2021 11:16:15 +0530</atom:modified><guid>https://www.gsavitha.in/posts/recursion-simplified/</guid><description>What is recursion? Recursion : A function calling itself directly or indirectly.
Directly:
1 2 3 4 5 void fun1(){ //somecode ... fun1(); //some other code... } Indirectly: Not a very common approach (Mostly direct recursive approach is used)
fun1() -&amp;gt; fun2() -&amp;gt; fun1()
1 2 3 4 5 6 7 8 9 10 11 12 void fun1(){ //somecode ... fun2(); //some other code... } void fun2(){ //somecode .</description><dc:creator>Savitha</dc:creator><media:content url="https://www.gsavitha.inhttps://storage.googleapis.com/algodailyrandomassets/curriculum/recursion/cover.jpg" medium="image"><media:title type="html">featured image</media:title></media:content><category>dsa</category><category>recursion</category><category>dsa</category></item><item><title>super() vs super(props)</title><link>https://www.gsavitha.in/posts/super-vs-super-props/</link><pubDate>Fri, 29 Jan 2021 17:52:28 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Fri, 29 Jan 2021 17:52:28 +0530</atom:modified><guid>https://www.gsavitha.in/posts/super-vs-super-props/</guid><description>TL;DR 🚀 If you want to use this.props inside constructor of derived class, use super(props).
While checking react code, you might have come across a line super(props), sometimes super(). Ever wondered what&amp;rsquo;s the difference between two?
Why do we need to pass props ? Do we always need to pass props ?
Consider the example below.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import React, { Component } from &amp;#34;react&amp;#34;; class Game extends Component { constructor(props) { super(props); this.</description><dc:creator>Savitha</dc:creator><media:content url="https://www.gsavitha.inhttps://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>react</category><category>react</category></item><item><title>Event Handling in JS</title><link>https://www.gsavitha.in/posts/event-handling-in-js/</link><pubDate>Sat, 26 Sep 2020 15:18:15 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Sat, 26 Sep 2020 15:18:15 +0530</atom:modified><guid>https://www.gsavitha.in/posts/event-handling-in-js/</guid><description>Intro to DOM Events Events - Responding to user inputs and actions
Types of events:(some of the many)
clicks, drags, drops, hovers,scrolls, form submissions, key press, focus/blur mousewheel, double click, copying, pasting, audio start, screen resize, printing etc. Note: All events follow a similar pattern
Pattern:
The thing Event type Code to run button click change the color input hits return get the search results image mouseover display img caption for more info visit MDN Event reference 2 ways not to add events Lets explore 2 different syntaxes which we should not use.</description><dc:creator>Savitha</dc:creator><media:content url="https://www.gsavitha.inhttps://res.cloudinary.com/practicaldev/image/fetch/s--ohpJlve1--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://res.cloudinary.com/drquzbncy/image/upload/v1586605549/javascript_banner_sxve2l.jpg" medium="image"><media:title type="html">featured image</media:title></media:content><category>javascript</category><category>DOM</category><category>es6</category><category>events</category><category>javascript</category></item><item><title>Hosting react projects on GH Pages</title><link>https://www.gsavitha.in/posts/host-react-on-gh-pages/</link><pubDate>Fri, 11 Sep 2020 12:31:59 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Fri, 11 Sep 2020 12:31:59 +0530</atom:modified><guid>https://www.gsavitha.in/posts/host-react-on-gh-pages/</guid><description>Want to host a react website? You cant afford paying bills for each and every project?
Well, Don&amp;rsquo;t worry now you can do that for free with the help of Github Pages. Using GH Pages you can host any website for free in a secured way.
When you host any static website or blog on github servers, basically your domain name would be in this format: {username}.github.io/{repo-name}, if you wish to host it on your own domain, no problem you can do that as well.</description><dc:creator>Savitha</dc:creator><media:content url="https://www.gsavitha.inhttps://miro.medium.com/max/1000/1*4u4uD5FiSkWdBNkRO6lVtQ.jpeg" medium="image"><media:title type="html">featured image</media:title></media:content><category>ghpages</category><category>react</category><category>hosting</category><category>devops</category><category>ci-cd</category></item><item><title>Syncing Git Fork with Original Repository</title><link>https://www.gsavitha.in/posts/sync-fork-with-original-git/</link><pubDate>Fri, 11 Sep 2020 11:30:29 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Fri, 11 Sep 2020 11:30:29 +0530</atom:modified><guid>https://www.gsavitha.in/posts/sync-fork-with-original-git/</guid><description>TL;DR 🚀 These are the only commands you need to sync your forked repo with the original repo
1 2 3 4 5 git remote add upstream https://github.com/&amp;lt;Original Owner Username&amp;gt;/&amp;lt;Original Repository&amp;gt;.git git fetch upstream git checkout master git merge upstream/master git push Why should I do this? 😏 Before submitting any pull request, syncing your forked repository with original repository is an important step to perform, as you may want to get the bug fixes or additional features to merge with your code since the time you forked the original repo.</description><dc:creator>Savitha</dc:creator><category>git</category><category>tools</category><category>ci-cd</category><category>ci-cd</category><category>devops</category></item><item><title>React State Patterns</title><link>https://www.gsavitha.in/posts/react-state-patterns/</link><pubDate>Tue, 01 Sep 2020 16:27:52 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Tue, 01 Sep 2020 16:27:52 +0530</atom:modified><guid>https://www.gsavitha.in/posts/react-state-patterns/</guid><description>Setting State Using State We know that setState() is asynchronous…
So: it’s risky to assume previous call has finished when you call it. Also, React will sometimes batch (squash together) calls to setState together into one for performance reasons. If a call to setState() depends on current state, the safest thing is to use the alternate “callback form”.
setState Callback Form this.setState(callback)
Instead of passing an object, pass it a callback with the current state as a parameter.</description><dc:creator>Savitha</dc:creator><media:content url="https://www.gsavitha.inhttps://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>react</category><category>react</category></item><item><title>Build your own website in 10 min! with hugo</title><link>https://www.gsavitha.in/posts/build-your-own-site/</link><pubDate>Sun, 23 Aug 2020 14:58:40 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Sun, 23 Aug 2020 14:58:40 +0530</atom:modified><guid>https://www.gsavitha.in/posts/build-your-own-site/</guid><description>Yes you read it right, you can build and host your website in 10 min 😎.
But how?
Static site generators to the rescue Ok but first, what is a static site? 😕 Basically websites are of two types, static and dynamic. A static site as the name sounds it is - static, constant and fixed. It doesn&amp;rsquo;t change dynamically when a developer makes a change to a file . They just create the static content(HTML and CSS) and upload them on to the server where it remains unchanged.</description><dc:creator>Savitha</dc:creator><media:content url="https://www.gsavitha.inhttps://avatars.githubusercontent.com/u/29385237?s=280&amp;v=4" medium="image"><media:title type="html">featured image</media:title></media:content><category>hugo</category><category>website</category><category>portfolio</category><category>misc</category></item></channel></rss>