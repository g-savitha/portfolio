<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>recursion on Savitha's Blog</title><link>https://www.gsavitha.in/tags/recursion/</link><description>Recent content in recursion on Savitha's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>mailto@gsavitha.in (Savitha)</managingEditor><webMaster>mailto@gsavitha.in (Savitha)</webMaster><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Sat, 20 Feb 2021 15:46:57 +0530</lastBuildDate><sy:updatePeriod>monthly</sy:updatePeriod><atom:link href="https://www.gsavitha.in/tags/recursion/index.xml" rel="self" type="application/rss+xml"/><item><title>How to write base cases</title><link>https://www.gsavitha.in/posts/recursion-base-cases/</link><pubDate>Sat, 20 Feb 2021 15:46:57 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Sat, 20 Feb 2021 15:46:57 +0530</atom:modified><guid>https://www.gsavitha.in/posts/recursion-base-cases/</guid><description>This post requires knowledge of Recursion. If you are new here, its recommended to have a look at that post first.
Many times, when it comes to recursion, we can guess the recursive solution but it becomes difficult to understand how to write proper base cases so that everything is handled and we do not get stack overflow(incase of java) or segmentation fault(incase of cpp) errors.
What are base cases? Base cases are those inputs, for which we cannot further break down the problem into smaller sub problems.</description><dc:creator>Savitha</dc:creator><category>dsa</category><category>recursion</category><category>dsa</category></item><item><title>Recursion Simplified</title><link>https://www.gsavitha.in/posts/recursion-simplified/</link><pubDate>Sun, 31 Jan 2021 11:16:15 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Sun, 31 Jan 2021 11:16:15 +0530</atom:modified><guid>https://www.gsavitha.in/posts/recursion-simplified/</guid><description>What is recursion? Recursion : A function calling itself directly or indirectly.
Directly:
1 2 3 4 5 void fun1(){ //somecode ... fun1(); //some other code... } Indirectly: Not a very common approach (Mostly direct recursive approach is used)
fun1() -&amp;gt; fun2() -&amp;gt; fun1()
1 2 3 4 5 6 7 8 9 10 11 12 void fun1(){ //somecode ... fun2(); //some other code... } void fun2(){ //somecode .</description><dc:creator>Savitha</dc:creator><category>dsa</category><category>recursion</category><category>dsa</category></item></channel></rss>