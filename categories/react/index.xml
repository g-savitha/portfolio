<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>react on Savitha's Blog</title><link>https://www.gsavitha.in/categories/react/</link><description>Recent content in react on Savitha's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>mailto@gsavitha.in (Savitha)</managingEditor><webMaster>mailto@gsavitha.in (Savitha)</webMaster><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Wed, 19 May 2021 12:47:25 +0530</lastBuildDate><sy:updatePeriod>monthly</sy:updatePeriod><atom:link href="https://www.gsavitha.in/categories/react/index.xml" rel="self" type="application/rss+xml"/><item><title>React Fundamentals: Understanding JSX</title><link>https://www.gsavitha.in/posts/understanding-jsx/</link><pubDate>Wed, 19 May 2021 12:47:25 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Wed, 19 May 2021 12:47:25 +0530</atom:modified><guid>https://www.gsavitha.in/posts/understanding-jsx/</guid><description>Hey, there üëã
Welcome to the 3rd article of the Epic React Series which is based on the workshop EpicReact.dev by Kent C. Dodds. If you haven&amp;rsquo;t read the previous article of this series, I recommend you to go read it first before proceeding further.
JS Fundamentals for React Intro to Raw React APIs In the previous article we understood about raw react APIs, especially React.createElement() and ReactDOM.render(). In this article, lets understand what is JSX and its significance.</description><dc:creator>Savitha</dc:creator><media:content url="https://www.gsavitha.inhttps://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>javascript</category><category>react</category><category>react</category><category>Epic React</category></item><item><title>React Fundamentals: Intro to Raw React APIs</title><link>https://www.gsavitha.in/posts/intro-to-raw-react-apis/</link><pubDate>Wed, 12 May 2021 14:35:48 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Wed, 12 May 2021 14:35:48 +0530</atom:modified><guid>https://www.gsavitha.in/posts/intro-to-raw-react-apis/</guid><description>Hey, there üëã
Welcome to the 2nd article of the Epic React Series which is based on the workshop EpicReact.dev by Kent C. Dodds. If you haven&amp;rsquo;t read previous article of the series, I recommend you to go and read it first before proceeding further.
JS Fundamentals required to get started with React In this post you are going to learn the very basics of react with HTML and javascript using raw React APIs.</description><dc:creator>Savitha</dc:creator><media:content url="https://www.gsavitha.inhttps://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>javascript</category><category>react</category><category>react</category><category>Epic React</category></item><item><title>JS fundamentals for React</title><link>https://www.gsavitha.in/posts/js-fundamentals-for-react/</link><pubDate>Mon, 10 May 2021 13:38:45 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Mon, 10 May 2021 13:38:45 +0530</atom:modified><guid>https://www.gsavitha.in/posts/js-fundamentals-for-react/</guid><description>Hey, there üëã
Welcome to the 1st article of the Epic React Series which is based on the workshop EpicReact.dev by Kent C. Dodds
In this article lets look at the basics of JS one should know before getting started with React. Feel free to skip the topics you already know.
Logical operators These operators are also known as short-circuit evaluation operators
Logical &amp;amp;&amp;amp; (AND) Let&amp;rsquo;s say you have two expressions x and y 1 x &amp;amp;&amp;amp; y; This operation will be executed if both x and y are truthy.</description><dc:creator>Savitha</dc:creator><media:content url="https://www.gsavitha.inhttps://res.cloudinary.com/practicaldev/image/fetch/s--ohpJlve1--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://res.cloudinary.com/drquzbncy/image/upload/v1586605549/javascript_banner_sxve2l.jpg" medium="image"><media:title type="html">featured image</media:title></media:content><category>javascript</category><category>react</category><category>react</category><category>Epic React</category></item><item><title>Epic React Series: Introduction</title><link>https://www.gsavitha.in/posts/epic-react-intro/</link><pubDate>Mon, 10 May 2021 12:45:39 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Mon, 10 May 2021 12:45:39 +0530</atom:modified><guid>https://www.gsavitha.in/posts/epic-react-intro/</guid><description>Hello world üëã
Today I decided to start a new series on react based on Kent C. Dodds&amp;rsquo;s EpicReact.dev workshop. While I go through the content of this workshop, I decided to share the knowledge I gain from it. Hope you enjoy this journey with me :)
The content of this workshop is self-paced and it is open source. But I recommended you to buy the course if you are a visual learner.</description><dc:creator>Savitha</dc:creator><media:content url="https://www.gsavitha.inhttps://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>javascript</category><category>react</category><category>react</category><category>Epic React</category></item><item><title>super() vs super(props)</title><link>https://www.gsavitha.in/posts/super-vs-super-props/</link><pubDate>Fri, 29 Jan 2021 17:52:28 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Fri, 29 Jan 2021 17:52:28 +0530</atom:modified><guid>https://www.gsavitha.in/posts/super-vs-super-props/</guid><description>TL;DR üöÄ If you want to use this.props inside constructor of derived class, use super(props).
While checking react code, you might have come across a line super(props), sometimes super(). Ever wondered what&amp;rsquo;s the difference between two?
Why do we need to pass props ? Do we always need to pass props ?
Consider the example below.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import React, { Component } from &amp;#34;react&amp;#34;; class Game extends Component { constructor(props) { super(props); this.</description><dc:creator>Savitha</dc:creator><media:content url="https://www.gsavitha.inhttps://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>react</category><category>react</category></item><item><title>React State Patterns</title><link>https://www.gsavitha.in/posts/react-state-patterns/</link><pubDate>Tue, 01 Sep 2020 16:27:52 +0530</pubDate><author>mailto@gsavitha.in (Savitha)</author><atom:modified>Tue, 01 Sep 2020 16:27:52 +0530</atom:modified><guid>https://www.gsavitha.in/posts/react-state-patterns/</guid><description>Setting State Using State We know that setState() is asynchronous‚Ä¶
So: it‚Äôs risky to assume previous call has finished when you call it. Also, React will sometimes batch (squash together) calls to setState together into one for performance reasons. If a call to setState() depends on current state, the safest thing is to use the alternate ‚Äúcallback form‚Äù.
setState Callback Form this.setState(callback)
Instead of passing an object, pass it a callback with the current state as a parameter.</description><dc:creator>Savitha</dc:creator><media:content url="https://www.gsavitha.inhttps://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>react</category><category>react</category></item></channel></rss>